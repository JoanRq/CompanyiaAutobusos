package vista;

import controlador.Controlador;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;

import static javax.swing.JOptionPane.showMessageDialog;

/**
 * Created by joan on 28/05/2016.
 */
public class DemanaCAprenent extends JFrame implements ActionListener, ListSelectionListener {

  private JButton desarButton;
  private JButton sortirButton;
  private JTextField nom;
  private JTextField dni;
  private JLabel lbDemanaCAprenent;
  private JLabel lbDNI;
  private JLabel lbLinesAssignades;
  private JTextArea linies;

  private JPanel demanaCAprenent;
  private JScrollPane spLlistaLinies;

  private JList jlst;     // Afegida a ma al interior de spLlistaLinies (JScrollPane)

  private Controlador ctrl;
  private String[] strKeys;

  public DemanaCAprenent(String nomMenu, Controlador c) {
    super(nomMenu); //impica posar extends JFrame

    ctrl = c;
    Object[] keys = (Object[]) ctrl.numLinines.keySet().toArray();
    Arrays.sort(keys);
    strKeys = new String[keys.length];
/***
 *  He deduit que la forma mes senzilla era deixar la Llista que esta dins del spLlistaLinies
 *  amb un codi nostre fet a ma :-)
 */
    jlst = new JList();
    jlst.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    final DefaultListModel defaultListModel1 = new DefaultListModel();
    int i = 0;
    for (Object ob : keys) {
      defaultListModel1.addElement(ob.toString());
      strKeys[i++] = ob.toString();
    }
    jlst.setModel(defaultListModel1);

    spLlistaLinies.setViewportView(jlst);
    spLlistaLinies.setPreferredSize(new Dimension(45, 45));

    setContentPane(demanaCAprenent);
    setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    pack();
    setLocationRelativeTo(null);

    desarButton.addActionListener(this);
    sortirButton.addActionListener(this);


    jlst.addListSelectionListener(this);

    setVisible(true);


  }

  public static void main(String[] args) {
    Controlador controlador = new Controlador();
    DemanaCAprenent dCAprenent = new DemanaCAprenent("Demanar Conductor Aprenent", controlador);

  }

  public void actionPerformed(ActionEvent e) {
    String botoApretat;
    System.out.println("Adeu" + e);
    try {
      botoApretat = e.getActionCommand().trim();
    } catch (Exception error) {
      botoApretat = "sortirButton";
      showMessageDialog(this, "Error al introducir datos");
    }

    if (botoApretat.equals("sortirButton")) {
      System.out.println("Sortim!!!");
      setVisible(false); //you can't see me!
      dispose(); //Destroy the JFrame object

    } else if (botoApretat.equals("desarButton")) {
      System.out.println("DESEM: " + dni.getText() + ", " + nom.getText());
      try {
        ctrl.addCondAprenent(dni.getText().trim(),
            nom.getText().trim());
        showMessageDialog(null, "Guardado correctamente");
        dni.setText("");
        nom.setText("");
        linies.setText("");
      } catch (Exception error) {
        System.err.println("Par√†metres incorrectes");
      }

    }
  }

  public void valueChanged(ListSelectionEvent le) {
    int idx;
    if ((idx = jlst.getSelectedIndex()) != -1) {
      System.out.println("event " + le + " " + strKeys.length);
      System.out.println("Estan sellectionat" + jlst.getSelectedValuesList());
/*      for (int j = 0; j < strKeys.length; j++) {
        System.out.println("idx " + j + " esta sellectionat" + jlst.getSelectedIndex());
      }
*/
    }

    System.out.println("Seleccionat" + strKeys[idx]);
  }


  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    demanaCAprenent = new JPanel();
    demanaCAprenent.setLayout(new GridBagLayout());
    lbLinesAssignades = new JLabel();
    lbLinesAssignades.setText("Linies Assignades");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.WEST;
    demanaCAprenent.add(lbLinesAssignades, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 50;
    demanaCAprenent.add(spacer1, gbc);
    final JPanel spacer2 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 15;
    demanaCAprenent.add(spacer2, gbc);
    final JPanel spacer3 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 100;
    demanaCAprenent.add(spacer3, gbc);
    final JPanel spacer4 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 15;
    demanaCAprenent.add(spacer4, gbc);
    final JPanel spacer5 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 15;
    demanaCAprenent.add(spacer5, gbc);
    final JPanel spacer6 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 15;
    demanaCAprenent.add(spacer6, gbc);
    final JPanel spacer7 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 6;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 100;
    demanaCAprenent.add(spacer7, gbc);
    final JPanel spacer8 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 120;
    demanaCAprenent.add(spacer8, gbc);
    final JPanel spacer9 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 5;
    demanaCAprenent.add(spacer9, gbc);
    final JPanel spacer10 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 100;
    demanaCAprenent.add(spacer10, gbc);
    final JPanel spacer11 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 6;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 50;
    demanaCAprenent.add(spacer11, gbc);
    final JPanel spacer12 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 7;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 50;
    demanaCAprenent.add(spacer12, gbc);
    final JPanel spacer13 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 5;
    gbc.fill = GridBagConstraints.VERTICAL;
    gbc.ipady = 15;
    demanaCAprenent.add(spacer13, gbc);
    sortirButton = new JButton();
    sortirButton.setActionCommand("sortirButton");
    sortirButton.setText("Sortir");
    gbc = new GridBagConstraints();
    gbc.gridx = 7;
    gbc.gridy = 5;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    demanaCAprenent.add(sortirButton, gbc);
    desarButton = new JButton();
    desarButton.setActionCommand("desarButton");
    desarButton.setText("Desar");
    gbc = new GridBagConstraints();
    gbc.gridx = 6;
    gbc.gridy = 5;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    demanaCAprenent.add(desarButton, gbc);
    linies = new JTextArea();
    linies.setEditable(false);
    linies.setEnabled(true);
    linies.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 3;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    demanaCAprenent.add(linies, gbc);
    final JPanel spacer14 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 5;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 5;
    demanaCAprenent.add(spacer14, gbc);
    final JPanel spacer15 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 8;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 50;
    demanaCAprenent.add(spacer15, gbc);
    spLlistaLinies = new JScrollPane();
    gbc = new GridBagConstraints();
    gbc.gridx = 6;
    gbc.gridy = 1;
    gbc.gridwidth = 2;
    gbc.gridheight = 3;
    gbc.fill = GridBagConstraints.BOTH;
    demanaCAprenent.add(spLlistaLinies, gbc);
    nom = new JTextField();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    demanaCAprenent.add(nom, gbc);
    dni = new JTextField();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    demanaCAprenent.add(dni, gbc);
    lbDemanaCAprenent = new JLabel();
    lbDemanaCAprenent.setText("Nom Conductor");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    demanaCAprenent.add(lbDemanaCAprenent, gbc);
    lbDNI = new JLabel();
    lbDNI.setText("DNI Conductor");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.WEST;
    demanaCAprenent.add(lbDNI, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return demanaCAprenent;
  }
}
